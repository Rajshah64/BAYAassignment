// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id            String          @id @default(uuid())
  email         String          @unique
  name          String?
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  favorites     Favorite[]
  searchHistory SearchHistory[]

  @@map("users")
}

model Favorite {
  id                String   @id @default(uuid())
  userId            String
  neoId             String
  neoName           String
  approachDate      DateTime
  isHazardous       Boolean
  estimatedDiameter Float
  createdAt         DateTime @default(now())
  user              User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, neoId])
  @@index([userId])
  @@map("favorites")
}

model SearchHistory {
  id        String   @id @default(uuid())
  userId    String
  startDate DateTime
  endDate   DateTime
  filters   Json?
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@map("search_history")
}